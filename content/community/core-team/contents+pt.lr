body:

Aquelas abelhas ocupadas do `Time Principal </community/team>`_ tem
algumas responsabilidades para manter a colmeia que é o BeeWare se
movendo. Esse é um projeto em evolução, portanto, esta página deve mudar.

Isso inclui, mas não se limita apenas a responder aos problemas, revisar e
aceitar código, mentorar novos contribuidores e arquitetar o projeto BeeWare
como um todo.

Existem pessoas que nós confiamos para fazer decisões de código, pessoas que
confiamos para decidir a organização do código e tem uma pessoa com quem a
responsabilidade metaforicamente fica, que guia a visão de toda a organização
e muitas vezes é seu maior torcedor.

Esses níveis podem ser descritos como:

Abelha ou Abelha Operária:
 - Qualquer membro da comunidade BeeWare. Dado que nós trabalhamos abertamente
   no GitHub, qualquer pessoas pode sugerir mudanças no código e ter seu código aceito.
   O único limite para sua capacidade de contribuir é ter seu trabalho incluído por um
   membro do time que tenha as permissões para fazê-lo.

Apicultor(a):
 - Uma abelha que foi reconhecida como contribuidora confiável. Essas abelhas
   tem demonstrado habilidade em relação a alguma parte especifica do projeto
   BeeWare por um período de tempo. Pode ser em um nível técnico (competência em
   JavaScript, Python, Objective-C; GTK+, conhecimento em macOS) ou em outro nível
   (administração da comunidade, revisão de código). Apicultores podem ter também
   o direito fazer commit bits para o projeto onde sua especialidade é reconhecida.

Apicultor(a) Sênior:
 - Apicultores com elevado acesso no GitHub, e também com um nível de responsabilidade
   para supervisionar o projeto como um todo. Podem fazer decisões sobre a
   arquitetura, mas precisam responder ao BDFN.

Apicultor Fundador: `Russell Keith-Magee <https://cloudisland.nz/@freakboy3742>`_
 - O primeiro homem que subiu na colina e viu um iaque(yak) que precisava ser tosquiado
 - Esse papel nunca muda e continua ad infinitum
 - Esse papel é diferente do BDFN.

Bee-nevolent Dictator for Now (BDFN): `Russell Keith-Magee <https://cloudisland.nz/@freakboy3742>`_
 - Assim como o `Benevolent Dictator for Life <https://en.wikipedia.org/wiki/Benevolent_dictator_for_life>`_, a responsabilidade fica com o BDFN.
   O uso de "for Now" (por agora) é o oposto de "for Life" (por toda vida) como referência ao lema do Django de não atribuir
   a responsabilidade de principal mantenedor para toda a vida de uma pessoa. Existe vida para
   além do open source e o equilíbrio entre programar/viver e bem-estar é algo importante para
   se ter em mente.


Orientações (não necessariamente regras)
-----------------------------------------------------

Como qualquer projeto com mais de uma pessoa com direito de fazer commit,
existem algumas orientações que o time deve seguir:


 * **Ser um bom representante do projeto para a comunidade como um todo.**

 * **Tratar todas as perguntas e contribuições para qualquer projeto do BeeWare com respeito.**

 * **Presumir que todos tem boas intenções, mesmo se eles não tiverem escolhido bem suas palavras.**

 * **Presumir que se alguém fizer algo da forma "errada", é porque nós falhamos no processo de
   comunicação.**

 * **Presumir que qualquer manifestação de raiva ou frustração vem de um genuíno desejo de usar
   uma ferramenta/biblioteca da BeeWare.**

 * **Encorajar outros membros da comunidade a refletir esses ideais em suas próprias comunicações,
   tanto dentro quanto fora da comunidade BeeWare.**

 *  Nenhum Apicultor deve fazer um commit de seu próprio código
     - Exceção: "Alguma coisa está quebrada e precisa ser consertada agora".
     - Exceção: BDFN (isso pode mudar no futuro).

 * Todo código submetido a revisão por um membro do time principal deve ser revisto por outro membro do time.
     - Exceção: BDFN (isso pode mudar no futuro).

 * Todo o código deve passar por testes de Integração Contínua antes de ser incorporado.
     - Exceção: código que sabemos estar quebrado e precisa ser feito o commit por outros motivos.
     - Exceção: código em um repositório com numero de teste de CI insuficientes.
     - Exceção: Funcionando e commitado é melhor do que perfeito e não.

  * Processo de aceitação deve ser automatizado sempre que possível.
     - Isso significa testes, verificações de sintaxe, de ortografia, cobertura de funcionalidades e mais.
     - Esse é um `trabalho em desenvolvimento </pt_BR/project/projects/tools/beefore/>`_




Tornando-se um(a) Apicultor(a)
---------------------------------

A inclusão de um(a) novo(a) apicultor(a) no time é de inteira responsabilidade do
Time Principal existente. Embora ainda não exista regras claras sobre isso, no
geral, alguém poderá ser convidado(a) a ser Apicultor(a) no projeto BeeWare se essa pessoa
tiver demonstrado sólidas contribuições ao projeto. Isso pode ser estendido
para alguém com um conhecimento específico em um domínio (por exemplo,
iOS/macOS) que pode estar faltando no time atual. Isso não precisa ser baseado
em commits. Qualquer um que demonstrar interesse no projeto no geral pode
pedir a permissão de poder fazer commits no projeto.

Todos os(as) novos(as) apicultores(as) serão 'introduzidos' (por falta de uma palavra melhor)
nos valores e orientações centrais do projeto. Um resumo dos valores centrais pode
ser encontrado `na página Sobre o projeto </pt_BR/project/about/>`_. Espera-se
que qualquer pessoa que entre no time detenha esses valores e contribua para o debate e
evolução desses dos mesmos no decorrer do tempo.

Qualquer Apicultor(a), novo(a) ou velho(a), não tem a obrigação de manter nenhuma parte
sozinho(a). Existem muitos apicultores e muitos outros além desses que podem oferecer
ajuda, conselhos e mentorias.

---
gutter:

"Commit bit"?
--------------------------------

Nos sistemas Unix, um único bit em um arquivo é usado para demonstrar
permissão de executar um arquivo. Em sistemas de controle de versão, um
bit similar existe para demonstrar a capacidade de incorporar um código.
Dizer que alguém tem um "commit bit" significa que ele tem o direito de
escrever em uma base de código. Em termos de GitHub, isso significa que
essas pessoas tem o direito de incorporar Pull Requests e commits de código
diretamente  no projeto.

---
sort_key: 3
---
summary: O que é o time principal e o que ele faz?
---
title: O Time Principal e suas Responsabilidades
