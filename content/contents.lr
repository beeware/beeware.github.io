_model: home
---
_template: home.html
---
title: Write once. Deploy everywhere.
---
summary: 
---
description:

Write your apps in Python and release them on iOS, Android, Windows,
MacOS, Linux, Web, and tvOS using rich, native user interfaces. Multiple
apps, one codebase, with a fully native user experience on every
platform.

---
header:

#### button-block ####
label: Take the Tutorial
----
link: /project/using/
----
icon: 
----
type: primary
----
size: lg
----
is_block: no
#### button-block ####
label: I Want To Contribute
----
link: /contributing/
----
icon: 
----
type: primary
----
size: lg
----
is_block: no
#### button-block ####
label: Donate and Support Us!
----
link: /membership/
----
icon: 
----
type: success
----
size: lg
----
is_block: 
---
body:

#### text-block ####
title: One codebase. Multiple apps.
----
text: BeeWare allows you to write your app in Python and release it on multiple platforms. No need to rewrite the app in multiple programming languages. It means **no issues** with build tools, environments, compatibility, etc.

#### text-block ####
title: Python native tools...
----
text: Python has proven itself as a highly capable language - approachable for newcomers, but powerful in the hands of experts. Why shouldn't you be able to **use Python everywhere** that you need to tell a computer to do something? And shouldn't your tools **exploit all the capabilities of Python** as a language, not just the bits that map nicely to a C binding?
----
image: python.png
----
image_alignment: right

#### text-block ####
title: ...on mobile & desktop...
----
text: Modern computing doesn't happen in an 80x25 console window. It happens on **phones, tablets, and desktop machines** with rich user interfaces. Shouldn't you be able to use Python in all those locations, and **exploit the unique capabilities of those platforms**?
----
image: cross-platform.png
----
image_alignment: left

#### text-block ####
title: ...behaving natively.
----
text: End users shouldn't have to care what language their tools are written in. And that starts with looking and behaving **like completely native tools**. Native appearance, native behavior, delivered in the way a native app is delivered. Why shouldn't your Python tools fit in just as well as a native tool?
----
image: native.png
----
image_alignment: right

#### text-block ####
title: This is BeeWare.
----
text: This is what BeeWare provides. Tools to help you write Python code with a rich, **native user interface**; and the libraries and support code necessary to get that code running on **iOS, Android, macOS, Linux, Windows, tvOS, and more**.
----
image: brutus-97.png
----
image_alignment: left

#### text-block ####
title: Open source
----
text: The Open Source development process has proven itself to be the most reliable way to develop robust and reliable software. That's why the entire BeeWare suite of tools are BSD licensed, and **available for all to use and modify**.
----
image: opensource.png
----
image_alignment: right

#### text-block ####
title: All contributions welcome
----
text: But it's not just about code. A successful software project requires documentation, design skills, feedback and bug reports. The BeeWare community acknowledges that **all contributions are important** â€” not just the ones that come as a pull request on GitHub.
----
image: labhr.png
----
image_alignment: left

#### text-block ####
title: From diversity comes strength
----
text: A diverse community is a strong community. This means accepting people of all levels of experience, from all backgrounds, of all races, creeds, orientations and expressions. The BeeWare project is committed to **developing and maintaining a diverse, welcoming community**. We have an **open offer to mentor anyone** who wants to get involved as a contributor, backed up by a [Code of Conduct](community/behavior/code-of-conduct/)  that is rigorously enforced.
----
image: diversity.png
----
image_alignment: right

#### text-block ####
title: Contribute!
----
text: If all this sounds interesting, why not take a look at the [BeeWare projects](/project) and see how you can use them when developing Python applications? Or, if you'd like to contribute, and you've never contributed to open source before, start with our [guide for first time contributors](/contributing/first-time/). If you feel ready to dive straight in, check out the [project pages](/project/) or our guide on [what you can do to help](/contributing/).

#### button-block ####
label:

Contribute to BeeWare
----
link: /contributing/
----
icon: code-fork
----
type: primary
----
size: lg
----
is_block: yes

#### text-block ####
title: Stay in touch!
----
text: Follow [@beeware@fosstodon.org](https://fosstodon.org/@beeware) on Mastodon, or [join the BeeWare enthusiasts mailing list](/community/keep-informed/) for updates, hints, tips, and announcements related to the project.

#### button-block ####
label: Keep in touch!
----
link: /community/keep-informed/
----
icon: envelope
----
type: success
----
size: lg
----
is_block: yes

#### text-block ####
title: Members
----
text: BeeWare is supported by users like you! Every little bit helps: [click here to contribute](/membership/). 
---
gutter_top: 
---
gutter_bottom: [... and many more](/project/)
