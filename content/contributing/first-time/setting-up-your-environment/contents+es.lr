_model: page
---
title: Configuración de tu entorno
---
_slug: configuracion
---
body:

Con el fin de poder colaborar, vas a tener que configurar un **entorno de desarrollo** - un lugar donde puedes trabajar en el código donde se comporte igual que en el ambiente de todos los demás.

Muchas partes de BeeWare utilizan las mismas herramientas: una versión específica de Python y controles de entornos virtuales (virtualenvs).

Python
-----------

Python es un lenguaje de scripting, que está disponible en una serie de diferentes sistemas operativos. Sin embargo, dependiendo del sistema que esté usando, tu versión de Python va a ser diferente. Debido a esta razón, especificamos exactamente qué versión de Python esperamos que el código utilice.

Para las siguientes instrucciones, vamos a suponer que tu sabes exactamente que versión de Python necesitas instalar. Normalmente esto está listado en el **README.md** o en la información del tutorial. Nuestro sistema de `integración continua </es/contribuir/como-ayudar/principiantes/que-es/ci/>`_ tienen que decir exactamente qué versión de Python se necesita. Así que si estás realmente atascado, prueba a mirar el :code:`.travis.yml` o :code:`circle.yml` para la versión específica que necesitas.

pyenv
~~~~~~

`pyenv <https://github.com/pyenv/pyenv>` _ es una forma de obtener múltiples versiones de Python trabajando en tu máquina al mismo tiempo. Te permite elegir que versión de Python utilizar para un proyecto en particular.

* MacOSX - Puedes instalar pyenv a través de `brew </es/contribuir/como-ayudar/principiantes/que-es/gestor-de-paquetes/>`_, ejecutando :code:`brew install pyenv`
* Otro - utiliza el `instalador automático <https://github.com/pyenv/pyenv-installer>`_.

Una vez :code: `pyenv` está instalado, necesitas instalar la versión específica de Python. Esta información se almacena en un archivo :code:`.python-version`, que significa que puede tener diferentes versiones de Python utilizadas en diferentes proyectos en tu computadora.

Para instalar y configurar la versión de Python:

.. code-block:: bash

    $ cd /path/to/your/project
    $ pyenv install 3.5.1
    $ pyenv local 3.5.1

Más información sobre pyenv está disponible en su `sitio web <https://github.com/pyenv/pyenv/blob/master/COMMANDS.md>`_

virtualenv
---------------

Una vez que instales Python, vas a querer poder instalar diferentes Paquetes de Python. Puesto que puedes tener más de un proyecto en proceso, y más de una versión de Python, teniendo una manera de asegurarse de que sólo los Paquetes específicos de Python están disponibles en cualquier momento es útil.

Una forma de hacerlo es a través de `virtualenv <https://virtualenv.pypa.io/en/stable/>`_.

Utilizando `pip </es/contribuir/como-ayudar/principiantes/que-es/gestor-de-paquetes/>`_, podemos instalar virtualenv

.. code-block:: bash

    $ pip install virtualenv

Entonces, queremos configurar un virtualenv que podemos activar. Tener más de un virtualenv está bien, pero sólo uno puede ser activado a la vez. Asegúrate de hacer la selección de Python con :code: `pyenv`, para que sepamos qué versión de Python vamos a usar

.. code-block:: bash

    $ virtualenv -p $ (pyenv which python) env

Entonces, podemos activar el entorno virtual.

.. code-block:: bash

    $ source env/bin/activate

Esto dará lugar a una pequeña nota en su línea de comandos que le permite saber que está en un entorno virtual

.. code-block:: bash

    (env) $

Para deshabilitar su virtualenv:

.. code-block:: bash

    deactivate
---
summary: Cómo obtener la configuración del sistema para poder contribuir
---
sort_key: 4
