_slug: setup
---
body:

Para poder contribuir, você precisara configurar um **ambiente de
desenvolvimento** - um lugar onde você pode codificar tendo o mesmo
comportamento no ambiente de outras pessoas.

Muitas partes do BeeWare usam as mesmas ferramentas: uma versão
específica do Python, e controles virtuais de ambiente.

## Python

Python é uma linguagem interpretada, que está disponível em diversos
sistemas operacionais. No entanto, dependendo de qual sistema você
estiver usando, sua versão do Python será diferente. Por essa razão, nós
especificamos exatamente em qual versão do Python esperamos que o código
funcione.

Para as próximas instruções, nós vamos presumir que você sabe exatamente
qual versão do Python você precisa instalar. Normalmente isso está
listado no arquivo README.md ou no tutorial de informação. Nosso sistema
[CI](/pt_BR/contributing/first-time/what-is-a/ci) deve falar exatamente
qual versão do Python é necessária também. Então se você estiver
perdido, tente procurar no arquivo `.travis.yml` ou `circle.yml` para a
versão específica que você precisa.

### pyenv

[pyenv](https://github.com/pyenv/pyenv) é uma forma de ter múltiplas
versões do Python funcionando na mesma máquina ao mesmo tempo. Ele te
permite escolher qualquer versão que você precisa para um projeto em
particular.

- MacOSX - Você pode instalar pyenv via
  [brew](/pt_BR/contributing/first-time/what-is-a/package-manager),
  executando `brew install pyenv`
- Outros - use o [instalador
  automático](https://github.com/pyenv/pyenv-installer).

Uma vez que `pyenv` esteja instalado, você precisa instalar a versão
especifica do Python. Essa informação está guardada em um arquivo
`.python-version`, o que significa que você pode usar diferentes versões
do Python em diferentes projetos no seu computador.

Para instalar e configurar uma versão do Python:

    $ cd /path/to/your/project
    $ pyenv install 3.5.1
    $ pyenv local 3.5.1

Mais informações sobre o pyenv estão disponíveis em [seu
website](https://github.com/pyenv/pyenv/blob/master/COMMANDS.md)

## virtualenv

Uma vez que Python esteja instalado, você vai querer instalar diferentes
pacotes do Python. Já que você pode estar trabalhando em mais de um
projeto, e mais de uma versão do Python, ter uma forma de garantir que
somente determinados pacotes do Python estejam disponíveis por vez é de
grande ajuda.

Uma forma de fazer isso é via
[virtualenv](https://virtualenv.pypa.io/en/stable/).

Usando [pip](/pt_BR/contributing/first-time/what-is-a/package-manager),
nós podemos instalar o virtualenv.

    $ pip install virtualenv

Agora nós queremos configurar uma virtualenv para depois ativa-la. Ter
mais de uma virtualenv é ok, mas somente uma pode ser ativada por vez.
Tenha certeza que você tenha selecionado seu Python com `pyenv`, assim
nós saberemos qual versão do Python usar.

    $ virtualenv -p $(pyenv which python) env

Agora nós podemos ativar o ambiente virtual.

    $ source env/bin/activate

Isso vai gerar uma pequena notificação na sua linha de comando para você
saber que está em um ambiente virtual.

    (env) $

Para desabilitar seu virtualenv.

    $ deactivate

---
sort_key: 4
---
summary: Como configurar seu sistema para contribuir
---
title: Configurando o seu ambiente
