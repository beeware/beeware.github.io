title: April 2022 Status Update
---
author: Russell Keith-Magee
---
body:

One of the benefits of [having the support of an organization like
Anaconda](../exciting-news-for-the-future-of-beeware) is that we now
have the time to perform little housekeeping tasks like publishing
community updates. As a result, this is the first (of hopefully many)
monthly updates letting you know what progress has been made in the
BeeWare suite.

## What we've done

During April:

- We've cleared the backlog of pull requests and issue triage. At this
  point, the only PRs that are open are ones that require updates or
  changes from the submitters. A lot of stale or duplicated issues have
  also been closed or consolidated.
- [Webviews on Windows now use the EdgeChromium renderer, rather than
  the IE11 renderer](https://github.com/beeware/toga/pull/1448). This
  massively improves the HTML compatibility of web views on Windows.
- [Toga windows now use a "single source of truth"
  approach](https://github.com/beeware/toga/pull/1461), using the API
  calls of the underlying GUI platform to determine the title, position
  and size of a window. This, in turn, allowed for the implementation of
  APIs that allow you to set the title, position and size of windows on
  desktop platforms.
- `on_exit` handlers on an App [can now be asynchronous
  co-routines](https://github.com/beeware/toga/pull/1463)
- Toga dialogs that return a result (such as YesNoDialog) now [use an
  asynchronous API](https://github.com/beeware/toga/pull/1464). This is
  a backwards incompatible change that was required to support dialogs
  on Android; it also allows us to remove a nasty hack that was needed
  on iOS. However, we've been able to implement this in such a way that
  any existing usage that is incompatible with the new required usage
  will be flagged with a helpful error.
- The [GTK web view has been
  improved](https://github.com/beeware/toga/pull/1470), correcting some
  odd caching behaviour.
- Following the [announcement of PyScript at PyCon US
  2022](https://pyscript.net), we've been able to [resurrect the Web
  backend for Toga](https://github.com/beeware/toga/pull/1475). This is
  still in the very early stages - but it's sufficiently advanced that
  we can run the first 2 tutorials, in both a "server side rendering"
  and "single page app" format.
- We've [improved Briefcase's code signing integration on
  macOS](https://github.com/beeware/briefcase/pull/690). This should
  prevent some errors we've seen when signing apps that contain
  third-party binary modules
- We've significantly improved validation and error handling when an app
  name contains [non-Latin
  characters](https://github.com/beeware/briefcase/pull/698) ,
  [punctuation](https://github.com/beeware/briefcase/pull/697), or
  [reserved words](https://github.com/beeware/briefcase/pull/617).
- We've added CI checks to [ensure that Briefcase is always able to
  generate a valid signed app
  bundles](https://github.com/beeware/briefcase/pull/700)
- We've [improved the output generated by verbose debug
  output](https://github.com/beeware/briefcase/pull/704) to improve full
  environment details . This should make it easier to identify why a
  command is failing due to unexpected user environments, and to assist
  in manually reproducing Briefcase's behaviour outside Briefcase.
- We now ensure that [macOS apps are \*always\*
  signed](https://github.com/beeware/briefcase/pull/714). This is needed
  because *all* apps required at least ad-hoc signing to execute on M1
  hardware.

Many of these PRs either began as, or are entirely the work of community
members. There are also dozens of smaller PRs, bug fixes, and bug
reports that are just as important, but are too numerous to list in a
post like this. A huge thanks to everyone who has contributed to BeeWare
during April.

## What's next?

In May, we'll be focussing on:

- Updating the support packages for macOS and iOS apps. Apple's
  transition to M1 hardware means there are new simulator architectures
  that require support; this, in turn, requires that we adopt Xcode's
  new XCFramework for the packaging libraries, which requires some
  fairly major changes to the way the support packages are built.
- Updating the support packages on Android to support Python 3.10.
- Notarization on M1. This is becoming an increasingly required part of
  macOS app publishing, as Apple cranks up the security requirements.

We're also expecting to start the hiring process in the coming month.
We'll provide more details when we can point a full job description. If
you think you'd like to make BeeWare your day job (or you know someone
who might), now would be a good time to start polishing your resume.

---
pub_date: 2022-05-02
---
mastodon_handle: @freakboy3742@cloudisland.nz
