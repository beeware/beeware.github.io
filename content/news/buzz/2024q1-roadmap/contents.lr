title: 2024Q1 Roadmap
---
author: Russell Keith-Magee
---
body:

It's the start of a new year, which means it's time to cast our minds
forward to what BeeWare will bring in the coming year. 2023 saw some
major milestones in stability and features; in 2024, we're going to
build on that foundation. As always, this roadmap should be read as a
guide to what we aim to focus on over the coming quarter, rather than a
hard commitment of features that will be made available on a specific
deadline.

## Q4 progress

During the last quarter of 2024, we finally finished our audit and
testing of Toga. We now have 100% branch coverage on every line of
Toga's core, and on the macOS, Windows, GTK, Android and iOS backends.
We published [Toga 0.4](https://pypi.org/project/toga/0.4.0/),
incorporating all these changes - but it also meant that we were able to
start adding *new* features to Toga, including an OptionContainer widget
on iOS, and a draft of a Camera API for iOS and macOS. Toga's new test
framework has made adding these new features must easier - for example,
we were able to very rapidly identify (and resolve) gaps in
functionality in the new iOS OptionContainer widget by running the
existing test suite on a new implementation. We expect that this testing
foundation will continue to serve us well as we add more features in the
coming year.

The other major development for the quarter was the start of the
upstreaming process for Python on mobile platforms.
[PEP730](https://peps.python.org/pep-0730/), proposing the addition of
iOS to the Tier 3 supported list of CPython core, has been ratified by
the steering council; and
[PEP738](https://discuss.python.org/t/pep-738-adding-android-as-a-supported-platform/40975),
proposing the same for Android, is in draft form. The first patch
contributing towards iOS support has already landed.

## Q1 priorities

Our Q1 goals are:

- **Complete upstreaming iOS and Android support patches to CPython
  core**. We will finalise PEP738 and submit it for ratification; and
  we'll continue upstreaming the iOS and Android patches that we've been
  maintaining independently. This work has a hard deadline of May 7, as
  that is when Python 3.13.0b1 is planned, which is the feature cutoff
  for Python 3.13 development, so making sure we hit that deadline will
  be our main priority.
- **Add OptionContainer for Android**. The implementation on iOS was
  relatively straightforward; we have no reason to believe that the
  Android implementation will be any more complicated.
- **Complete the implementation of the Camera API**. We have a draft PR
  implementing a Camera API on macOS and iOS; we'll extend this API to
  Android, and complete the work on Briefcase that is needed to add
  support for permissions.
- **Add an API for geolocation, and a Map widget**. Geolocation is
  another major hardware features that is common on phones; we need to
  write a cross-platform layer for that hardware, plus add a native
  mapping widget to show off this capability.

## Longer term goals

For the remainder of this year, you can expect to see three major themes
in BeeWare development.

Firstly, we're going to continue to work upstreaming the work BeeWare
has done in the mobile space into the wider CPython community. Once iOS
and Android have been incorporated into CPython core, the focus will
move to the packaging ecosystem. This means adding official support to
upload iOS and Android packages to PyPI, and making it easy for third
party projects to incorporate iOS and Android builds into their release
processes.

Secondly, we'll be increasing our efforts in education and training.
BeeWare has a tutorial that we're extremely proud of - but there are
many things we could add to that tutorial, and there are plenty of "How
To" and topic guides that could be written for those who have finished
the tutorial and want to try more advanced ideas.

Thirdly, we'll continue to expand the capabilities of Toga. There are a
handful of high profile widgets and capabilities that have been
patiently waiting for us to have a stable platform to build on, and the
spare capacity to implement them - features like a Radio Button widget,
Trees and Tables on mobile platforms, a cross-platform Settings API, and
cross-platform cloud file access.

## Summary

2024 promises to be a very exciting year for BeeWare. For the last 2
years, we've been focused on consolidating and stabilizing existing
features. That work is coming to a close, which will allow us to turn
our attention to building new features that show off the stable
foundation we've built, and to providing the resources that will allow
more users to try BeeWare for themselves.

---
mastodon_handle: @freakboy3742@mastodon.nz
---
pub_date: 2024-01-10
