title: May 2022 Status Update
---
author: Russell Keith-Magee
---
body:

It's been another busy month at the hive! The progress we made in May
isn't as obvious as last month - but the changes that have been made are
an essential part of ensuring we have a stable foundation for future
work on the BeeWare ecosystem.

## What we've done

During May:

- [We updated the Apple support
  packages](https://github.com/beeware/Python-Apple-support/pull/145).
  These updates aren't *just* a version bump - they also added support
  that enables the iOS emulator to run natively on M1 devices. This
  required a major restructure of the way the support packages are
  bundled, using Apple's new XCframework library packaging format.
- We addressed an issue with the use of ctypes on physical iOS devices.
  ctypes is a core part of the infrastructure we use to integrate with
  the iOS system libraries, so resolving this bug was critical for
  distributing apps. The fix was [deep in the core of
  libFFI](https://github.com/libffi/libffi/pull/718), and has been
  submitted for integration into the upstream project.
- [We released an Android support package for Python
  3.10](https://github.com/beeware/Python-Android-support/pull/37), as
  well as updated support packages for Python 3.7, 3.8, and 3.9. These
  support packages dramatically are now dramatically smaller, and result
  in smaller end-user applications, thanks to some compiler flag
  optimisations suggested by the community.
- We began the process of adding support for Python 3.11 to the Apple
  and Android support packages. This is the first time BeeWare has been
  able to contribute prerelease testing to the CPython project. In the
  process, we [discovered a small backwards
  incompatibility](https://github.com/python/cpython/issues/92913).
  Baring major incidents, we should be in a position to release
  BeeWare's support for Python 3.11 on the same day as the official
  3.11.0 is finalised.
- [We developed an acceptance test suite for the Apple and Android
  support packages](https://github.com/beeware/Python-support-testbed).
  This test suite tests for features in the Python core that have a
  history of being broken (such as modules in the standard library that
  have binary components, but have been incorrectly compiled or
  inadvertently excluded from the build). This test suite isn't yet
  formally integrated into the build process, but the hope is that it
  will be in the near future.
- We modified Briefcase so that it is able to [run the Android emulator
  on M1 hardware](https://github.com/beeware/briefcase/pull/719). This
  required a major rebuild of the way the Android SDK tooling is
  managed.
- We made further improvements to the log capture tools on macOS. This
  ensures that [the first few seconds of application logs are reliably
  captured](https://github.com/beeware/briefcase/pull/731), and the [log
  stream is terminated when the app
  exits](https://github.com/beeware/briefcase/pull/742).
- [We started the introduction of Black as a part of BeeWare's
  development tooling](https://github.com/beeware/briefcase/pull/744).
  BeeWare's repositories have always enforced code style guidelines, and
  those code styles are very closely aligned with Black's choices. With
  Black formally moving out of Beta status at the start of this year,
  the time has come to start adopting Black as a formal project
  requirement. For now, Briefcase is the only project that has formally
  adopted Black, but you can expect this to continue to roll out over
  the other projects in BeeWare over the coming months.
- We resolved some minor bugs that were present in the 0.3.0dev33
  release of Toga. Most important of these was a bug that [prevented the
  BeeWare tutorial running on iOS
  devices](https://github.com/beeware/toga/pull/1492).

Many of these changes either began as, or are entirely the work of
community members. There are also plenty of smaller PRs, bug fixes, and
bug reports that are just as important, but are too numerous to list. A
huge thanks to everyone who has contributed to BeeWare during May.

## What's next?

In June, we'll be focussing on:

- Publishing our roadmap for Q3 and beyond! Now that we have reliable
  development resources, we're in a position to make public commitments
  on the future direction of the project.
- Completing the hiring process for another engineer to work on BeeWare
  full time. This hiring process is underway, but it's not too late to
  apply if you're interested. Full details of the position [can be found
  on Greenhouse](https://boards.greenhouse.io/anaconda/jobs/4211521).
- App Notarization on macOS. This is becoming an increasingly required
  part of macOS app publishing, as Apple cranks up their security
  requirements.
- Improving Windows packaging. This includes improving the way the
  running app presents to the Task Manager, improving log capture, and
  app signing.
- Improving Linux packaging. This includes addressing some issues with
  packaging binary dependencies.

---
mastodon_handle: @freakboy3742@cloudisland.nz
---
pub_date: 2022-06-01
